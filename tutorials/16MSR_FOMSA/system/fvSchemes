/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
    ddt(U)	    Euler; //momentum equation
    ddt(T)	    Euler; //energy equation
}

gradSchemes
{
    default         cellMDLimited Gauss linear 1.0;
    grad(T)	    cellMDLimited Gauss linear 1.0;
    grad(U)	    cellMDLimited Gauss linear 1.0; 
    grad(p)	    cellMDLimited Gauss linear 1.0; 
}

divSchemes
{
    default             Gauss linear;
    div(phi,prec1)      Gauss linearUpwind grad(prec1);
    div(phi,prec2)      Gauss linearUpwind grad(prec2);
    div(phi,prec3)      Gauss linearUpwind grad(prec3);
    div(phi,prec4)      Gauss linearUpwind grad(prec4);
    div(phi,prec5)      Gauss linearUpwind grad(prec5);
    div(phi,prec6)      Gauss linearUpwind grad(prec6);
    div(phi,prec7)      Gauss linearUpwind grad(prec7);
    div(phi,prec8)      Gauss linearUpwind grad(prec8);
    div(phi,dec1)       Gauss linearUpwind grad(dec1);
    div(phi,dec2)       Gauss linearUpwind grad(dec2);
    div(phi,dec3)       Gauss linearUpwind grad(dec3);
    div(phi,alphaU)     Gauss linearUpwind grad(alphaU);
    div(phi,U)      	Gauss linearUpwindV grad(U); 
    div(phi,T)      	Gauss linearUpwind grad(T); 
    
}

laplacianSchemes
{
    default         Gauss linear corrected;
    //laplacian(flu1) Gauss limitedVanLeer bounded;
    //default Gauss limitedVanLeer bounded;
    laplacian(nuEff,U) Gauss linear corrected; //momentum equation (viscous term)
    laplacian((1|A(U)),p_rgh) Gauss linear corrected; //pressure equation SIMPLE algorithm
    laplacian(kappaEff,T) Gauss linear corrected; //energy equation, it can be changed!!
    laplacian(DkEff,k) Gauss linear corrected; //k equation
    laplacian(DepsilonEff,epsilon) Gauss linear corrected; //epsilon equation
}

interpolationSchemes
{
    default         linear;
    interpolate(U)	linear;
    interpolate(rAU)	linear;
    interpolate(U_0)	linear;
    interpolate(((1|deltaT)*rAU))	linear;
}

snGradSchemes
{
    default         corrected;
    //snGrad(flu1)         bounded;
}

fluxRequired
{
    default         no;
    p;	
}


// ************************************************************************* //
